#!/usr/bin/env bash

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source=$1
cd $source

payload=$(mktemp /tmp/artifactory-deb.XXXXXX)
cat > $payload <&0

attr() {
  local type=$1
  local name=$2
  local val=$(jq -r ".$type.$name // \"\"" < $payload)
  test -z "$val" && { echo "Must supply '$name' $type attribute"; exit 1; }
  echo $val
}

assemble_properties() {
  local props="deb.component=$component;"

  for d in $(echo $distribution | jq -r '.[]'); do
    props+="deb.distribution=$d;"
  done

  props+="deb.architecture=$architecture"

  echo $props
}

assemble_url() {
  local deb=$1
  echo "$repository/$components_dir/$deb;$(assemble_properties)"
}

put() {
  local deb=$1
  curl -u$username:$password -XPUT "$(assemble_url $deb)" -T $deb
}

repository=$(attr source repository)
username=$(attr source username)
password=$(attr source password)
distribution=$(attr source distribution)
if ! echo "$distribution" | egrep '^\[.*' > /dev/null; then
  distribution="[\"$distribution\"]"
fi

component=$(jq -r '.source.component // "main"' < $payload)
components_dir=$(jq -r '.source.components_dir // "pool"' < $payload)
architecture=$(jq -r '.source.architecture // "amd64"' < $payload)

cd $source/

jq -n '{
  version: {}
}' >&3
